import React, { useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { AuthAPI } from "@/api";

interface ProtectedRouteProps {
  children: React.ReactNode;
}

function ProtectedRoute({ children }: ProtectedRouteProps) {
  const navigate = useNavigate();

  useEffect(() => {
    // Kiá»ƒm tra xem user Ä‘Ã£ Ä‘Äƒng nháº­p chÆ°a
    if (!AuthAPI.isAuthenticated()) {
      console.log("ðŸ”’ User not authenticated, redirecting to login");
      navigate('/login');
      return;
    }

    // Kiá»ƒm tra thÃ´ng tin user cÃ³ há»£p lá»‡ khÃ´ng
    const user = AuthAPI.getStoredUser();
    if (!user) {
      console.log("ðŸ‘¤ No user data found, redirecting to login");
      navigate('/login');
      return;
    }

    console.log(`âœ… User authenticated: ${user.ten} (${AuthAPI.getRoleName(user.vai_tro)})`);
  }, [navigate]);

  // Chá»‰ render children náº¿u user Ä‘Ã£ Ä‘Äƒng nháº­p
  if (!AuthAPI.isAuthenticated() || !AuthAPI.getStoredUser()) {
    return null; // Hoáº·c cÃ³ thá»ƒ return má»™t loading spinner
  }

  return <>{children}</>;
}

export default ProtectedRoute;